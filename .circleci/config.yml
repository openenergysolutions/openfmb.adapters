version: 2.1
orbs:
  win: circleci/windows@1.0.0
commands:
  install_system_deps:
    description: Install system dependencies
    parameters:
      compiler:
        description: The compiler to use
        type: enum
        enum: ["gcc", "clang"]
    steps:
      - run:
          name: Install system dependencies
          command: >
            apt-get update && apt-get install -y build-essential unzip git git-lfs cmake python3 python3-pip libssl-dev libpcap-dev && 
            if [ "<< parameters.compiler >>" = "clang" ]; then apt-get install -y clang && echo "export CC=/usr/bin/clang" >> $BASH_ENV && echo "export CXX=/usr/bin/clang++" >> $BASH_ENV; fi
      - run:
          name: Install conan
          command: >
            pip3 install conan &&
            conan profile new default --detect &&
            conan profile update settings.compiler.libcxx=libstdc++11 default
  add_github_api_token:
    description: Add GitHub API token
    steps:
      - run:
          name: Add GitHub API token
          command: >
            git config --global --add url."https://${GITHUB_API_KEY}@github.com/".insteadOf "git@github.com:" &&
            git config --global --add url."https://${GITHUB_API_KEY}@github.com/".insteadOf "https://github.com/"
  checkout_and_submodule_init:
    description: Checkout and update submodules
    steps:
      - checkout
      - run:
          name: Submodule update
          command: git submodule update --init
  install_deps:
    description: Install and/or build the dependencies
    steps:
      - run:
          name: Build NATS
          working_directory: deps/nats
          command: >
            git clone --depth 1 --single-branch -b v2.0.0 https://github.com/nats-io/nats.c.git . &&
            cmake -DCMAKE_BUILD_TYPE=Release -DNATS_BUILD_STREAMING=OFF &&
            cmake --build . --target install
      - run:
          name: Install RTI DDS library
          working_directory: deps
          command: >
            git clone https://github.com/openenergysolutions/rti-dds-lfs.git &&
            mkdir rti-dds &&
            unzip rti-dds-lfs/rti-dds.zip -d rti-dds &&
            chmod -R +x ./rti-dds
      - run:
          name: Install conan dependencies
          working_directory: build
          command: conan install --build=missing ..
  build:
    description: Build the adapter
    parameters:
      build_type:
        description: Build type
        type: enum
        enum: ["Debug", "Release"]
        default: Release
      build_static:
        description: Build statically
        type: string
        default: "ON"
    steps:
      - run:
          name: CMake configure
          working_directory: build
          command: >
            cmake -DCMAKE_BUILD_TYPE=<< parameters.build_type >> \
              -DOPENFMB_LINK_STATIC=<< parameters.build_static >> \
              -DOPENFMB_USE_RTI_DDS=ON -DCONNEXTDDS_DIR="/root/project/deps/rti-dds" ..
      - run:
          name: CMake build
          working_directory: build
          command: cmake --build .
  test:
    description: Run the unit tests
    steps:
      - run:
          name: Run CTest
          working_directory: build
          command: ctest .
  store_application:
    description: Store application executable
    steps:
      - store_artifacts:
          path: /root/project/build/application/openfmb-adapter
          destination: adapter
jobs:
  gcc-debug:
    docker:
      - image: debian:buster
    steps:
      - install_system_deps:
          compiler: gcc
      - add_github_api_token
      - checkout_and_submodule_init
      - install_deps
      - build:
          build_type: Debug
          build_static: "ON"
      - test
      - store_application
  gcc-release:
    docker:
      - image: debian:buster
    steps:
      - install_system_deps:
          compiler: gcc
      - add_github_api_token
      - checkout_and_submodule_init
      - install_deps
      - build:
          build_type: Release
          build_static: "ON"
      - test
      - store_application
  clang-debug:
    docker:
      - image: debian:buster
    steps:
      - install_system_deps:
          compiler: clang
      - add_github_api_token
      - checkout_and_submodule_init
      - install_deps
      - build:
          build_type: Debug
          build_static: "OFF"
      - test
      - store_application
  clang-release:
    docker:
      - image: debian:buster
    steps:
      - install_system_deps:
          compiler: clang
      - add_github_api_token
      - checkout_and_submodule_init
      - install_deps
      - build:
          build_type: Release
          build_static: "OFF"
      - test
      - store_application
  windows:
    executor:
      name: win/vs2019
      shell: powershell.exe
    steps:
      - run:
          name: Install system dependencies
          command: choco install 7zip.portable python cmake.portable openssl; refreshenv
      - run:
          name: Install conan
          command: >
            pip install conan;
            conan profile new default --detect
      - run:
          name: Add GitHub API token
          command: >
            git config --global --add url."https://$Env:GITHUB_API_KEY@github.com/".insteadOf "git@github.com:";
            git config --global --add url."https://$Env:GITHUB_API_KEY@github.com/".insteadOf "https://github.com/"
      - checkout
      - run:
          name: Submodule update
          command: git submodule update --init
      - run:
          name: Build NATS
          working_directory: deps/nats
          command: >
            git clone --depth 1 --single-branch -b v2.0.0 https://github.com/nats-io/nats.c.git .;
            cmake -DCMAKE_INSTALL_PREFIX="C:/Users/circleci/project/deps/cnats" -DCMAKE_BUILD_TYPE=Release -DNATS_BUILD_STREAMING=OFF;
            cmake --build . --config Release --target install
      - run:
          name: Install RTI DDS library
          working_directory: deps
          command: >
            git clone https://github.com/openenergysolutions/rti-dds-lfs.git;
            7z x rti-dds-lfs/rti-dds.zip -orti-dds
      - run:
          name: Install npcap
          working_directory: deps
          command: >
            $ProgressPreference = "SilentlyContinue";
            wget "https://nmap.org/npcap/dist/npcap-sdk-1.04.zip" -outfile npcap-sdk.zip;
            7z x npcap-sdk.zip -onpcap-sdk;
            Get-ChildItem npcap-sdk/Lib/x64 | Move-Item -Destination npcap-sdk/Lib -Force; Remove-Item npcap-sdk/Lib/x64 -Recurse
      - run:
          name: Install conan dependencies
          working_directory: build
          command: conan install --build=missing ..
      - run:
          name: CMake configure
          working_directory: build
          command: >
            cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="C:/Users/circleci/project/deps/npcap-sdk;C:/Users/circleci/project/deps/cnats" -DOPENFMB_USE_RTI_DDS=ON -DCONNEXTDDS_DIR="C:/Users/circleci/project/deps/rti-dds" -DCONNEXTDDS_ARCH="x64Win64VS2017" ..
      - run:
          name: CMake build
          working_directory: build
          command: cmake --build . --config Release
      - run:
          name: Run CTest
          working_directory: build
          command: ctest -C Release
      - store_artifacts:
          path: C:/Users/circleci/project/build/application/Release/openfmb-adapter.exe
          destination: adapter
workflows:
  version: 2
  check:
    jobs:
      #- gcc-debug
      - gcc-release
      #- clang-debug
      - clang-release
      - windows
