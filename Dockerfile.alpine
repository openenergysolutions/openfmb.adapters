FROM alpine:latest as build
WORKDIR /usr/src/openfmb.adapters
RUN apk update
RUN apk upgrade
RUN apk add git cmake ninja build-base flex bison python3 py3-pip perl curl tar gzip linux-headers
RUN pip install conan
RUN conan profile new default --detect
RUN conan profile update settings.compiler.libcxx=libstdc++11 default
RUN git config --global --add url."https://oauth2:64ef39deea6162ae64ba00e052df265849791682@github.com/".insteadOf "https://github.com/"
RUN git config --global --add url."https://oauth2:64ef39deea6162ae64ba00e052df265849791682@github.com/".insteadOf "git@github.com:"
COPY . .
RUN git submodule update --init
WORKDIR /usr/src/openfmb.adapters/build
RUN CXXFLAGS="-flto -Os -ffunction-sections -fdata-sections" CFLAGS="-flto -Os -ffunction-sections -fdata-sections" LDFLAGS="-flto -Wl,--gc-sections" conan install --build=* ..
WORKDIR /usr/src/openfmb.adapters/deps/nats
RUN git clone --depth 1 --single-branch -b v2.0.0 https://github.com/nats-io/nats.c.git .
RUN CXXFLAGS="-flto -Os -ffunction-sections -fdata-sections" CFLAGS="-flto -Os -ffunction-sections -fdata-sections" LDFLAGS="-flto -Wl,--gc-sections" cmake -G Ninja -DCMAKE_PREFIX_PATH="$(conan info --package-filter OpenSSL* --paths -n package_folder /usr/src/openfmb.adapters | grep -o /root.*)" -DCMAKE_BUILD_TYPE=Release -DNATS_BUILD_STREAMING=OFF
RUN ninja install
WORKDIR /usr/src/openfmb.adapters/deps/pcap
RUN curl https://www.tcpdump.org/release/libpcap-1.9.1.tar.gz > libpcap-1.9.1.tar.gz && tar -xzf libpcap-1.9.1.tar.gz 
WORKDIR /usr/src/openfmb.adapters/deps/pcap/libpcap-1.9.1
RUN ./configure --prefix=/usr/local
RUN CXXFLAGS="-flto -Os -ffunction-sections -fdata-sections" CFLAGS="-flto -Os -ffunction-sections -fdata-sections" LDFLAGS="-flto -Wl,--gc-sections" make -j8 all
RUN make install
WORKDIR /usr/src/openfmb.adapters/build
RUN CXXFLAGS="-flto -Os -ffunction-sections -fdata-sections -U_FORTIFY_SOURCE" CFLAGS="-flto -Os -ffunction-sections -fdata-sections -U_FORTIFY_SOURCE" LDFLAGS="-flto -Wl,--gc-sections" cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DOPENFMB_LINK_STATIC=true -DOPENFMB_LINK_STATIC_LIBC=true -DOPENFMB_USE_RTI_DDS=false ..
RUN ninja -v
RUN ctest .
WORKDIR /usr/src/openfmb.adapters/build/application
RUN strip openfmb-adapter
FROM scratch
COPY --from=build /usr/src/openfmb.adapters/build/application/openfmb-adapter /openfmb-adapter
ENTRYPOINT ["/openfmb-adapter"]
