---
name: session1  # name for logging purposes
log-level: Info  # {Trace, Debug, Info, Warn, Error, Critical}
remote-ip: 127.0.0.1
port: 8080
unit-identifier: 2  # aka 'slave address'
response_timeout_ms: 1000  # response timeout
always-write-multiple-registers: false  # if true, translate single register writes to multiple register write w/ single value 
auto_polling:  # configuration parameters for auto-polling
  max_register_gaps: 0  # 0 == no gaps allowed when polling for registers
heartbeats: []
profiles:
  - name: BreakerEventProfile
    poll_period_ms: 5000  # perform polls once per second
    mapping:  # profile model starts here
      eventMessageInfo:
        messageInfo:
          identifiedObject:
            description:
              value:
                string-field-type: ignored
            mRID:
              value:
                string-field-type: generated_uuid
            name:
              value:
                string-field-type: ignored
          messageTimeStamp:
            timestamp-field-type: message
      breaker:
        conductingEquipment:
          namedObject:
            description:
              value:
                string-field-type: ignored
            name:
              value:
                string-field-type: ignored
          mRID:
            string-field-type: primary_uuid
            value: "b5e74929-71bd-4deb-bde6-5dc83fab52ae"
      breakerEvent:
        eventValue:
          identifiedObject:
            description:
              value:
                string-field-type: ignored
            mRID:
              value:
                string-field-type: ignored
            name:
              value:
                string-field-type: ignored
        statusAndEventXCBR:
          logicalNodeForEventAndStatus:
            logicalNode:
              identifiedObject:
                description:
                  value:
                    string-field-type: ignored
                mRID:
                  value:
                    string-field-type: ignored
                name:
                  value:
                    string-field-type: ignored
            Beh:
              q:
                quality-field-type: ignored
              stVal:
                enum-field-type: ignored
              t:
                timestamp-field-type: ignored
            EEHealth:
              d:
                value:
                  string-field-type: ignored
              stVal:
                enum-field-type: ignored
          DynamicTest:
            q:
              quality-field-type: ignored
            stVal:
              enum-field-type: mapped
              enum-mapping-type: none  # {none, holding_register, multiple_holding_register}
              index: 0
              mask: 0xffff  # mask the register. map masked values to enum values
              mapping:
                - name: DynamicTestKind_none
                  value: 0
                - name: DynamicTestKind_testing
                  value: 1
                - name: DynamicTestKind_operating
                  value: 2
                - name: DynamicTestKind_failed
                  value: 3
            t:
              timestamp-field-type: ignored
          Pos:
            q:
              quality-field-type: ignored
            stVal:
              enum-field-type: mapped
              enum-mapping-type: holding_register  # {none, holding_register, multiple_holding_register}
              index: 0
              mask: 0xffff  # mask the register. map masked values to enum values
              mapping:
                - name: DbPosKind_transient
                  value: 0
                - name: DbPosKind_closed
                  value: 1
                - name: DbPosKind_open
                  value: 2
                - name: DbPosKind_invalid
                  value: 3
            t:
              timestamp-field-type: ignored
      ied:
        identifiedObject:
          description:
            value:
              string-field-type: ignored
          mRID:
            value:
              string-field-type: ignored
          name:
            value:
              string-field-type: ignored
  - name: ESSEventProfile
    poll_period_ms: 2000  # perform polls once per second
    mapping:  # profile model starts here
      eventMessageInfo:
        messageInfo:
          identifiedObject:
            description:
              value:
                string-field-type: ignored
            mRID:
              value:
                string-field-type: generated_uuid
            name:
              value:
                string-field-type: ignored
          messageTimeStamp:
            timestamp-field-type: message
      ess:
        conductingEquipment:
          namedObject:
            description:
              value:
                string-field-type: ignored
            name:
              value:
                string-field-type: ignored
          mRID:
            string-field-type: primary_uuid
            value: "9490da9a-a621-406a-b7bb-fd6ad3a93203"
      essEvent:
        eventValue:
          identifiedObject:
            description:
              value:
                string-field-type: ignored
            mRID:
              value:
                string-field-type: ignored
            name:
              value:
                string-field-type: ignored
        essEventZBAT:
          logicalNodeForEventAndStatus:
            logicalNode:
              identifiedObject:
                description:
                  value:
                    string-field-type: ignored
                mRID:
                  value:
                    string-field-type: ignored
                name:
                  value:
                    string-field-type: ignored
            Beh:
              q:
                quality-field-type: ignored
              stVal:
                enum-field-type: ignored
              t:
                timestamp-field-type: ignored
            EEHealth:
              d:
                value:
                  string-field-type: ignored
              stVal:
                enum-field-type: ignored
          BatHi:
            q:
              quality-field-type: ignored
            stVal:
              bool-field-type: mapped
              source-type: none  # {none, holding_register}
              index: 0
              mask: 0x0001  # mask the register. true if masked value != 0
              invert: false  # invert the boolean value.
            t:
              timestamp-field-type: ignored
          BatLo:
            q:
              quality-field-type: ignored
            stVal:
              bool-field-type: mapped
              source-type: none  # {none, holding_register}
              index: 0
              mask: 0x0001  # mask the register. true if masked value != 0
              invert: false  # invert the boolean value.
            t:
              timestamp-field-type: ignored
          BatSt:
            q:
              quality-field-type: ignored
            stVal:
              bool-field-type: mapped
              source-type: none  # {none, holding_register}
              index: 0
              mask: 0x0001  # mask the register. true if masked value != 0
              invert: false  # invert the boolean value.
            t:
              timestamp-field-type: ignored
          Soc:
            mag:
              f:
                value:
                  float-field-type: mapped
                  source-type: holding_register  # {none, holding_register}
                  register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                  lower_index: 10
                  upper_index: 11
                  scale: 1
              i:
                value:
                  int32-field-type: ignored
            q:
              quality-field-type: ignored
            t:
              timestamp-field-type: ignored
            units:
              multiplier:
                value:
                  enum-field-type: ignored
              SIUnit:
                enum-field-type: ignored
          Stdby:
            q:
              quality-field-type: ignored
            stVal:
              bool-field-type: mapped
              source-type: none  # {none, holding_register}
              index: 0
              mask: 0x0001  # mask the register. true if masked value != 0
              invert: false  # invert the boolean value.
            t:
              timestamp-field-type: ignored
        essEventZGEN:
          eSSEventAndStatusZGEN:
            logicalNodeForEventAndStatus:
              logicalNode:
                identifiedObject:
                  description:
                    value:
                      string-field-type: ignored
                  mRID:
                    value:
                      string-field-type: ignored
                  name:
                    value:
                      string-field-type: ignored
              Beh:
                q:
                  quality-field-type: ignored
                stVal:
                  enum-field-type: ignored
                t:
                  timestamp-field-type: ignored
              EEHealth:
                d:
                  value:
                    string-field-type: ignored
                stVal:
                  enum-field-type: ignored
            AuxPwrSt:
              q:
                quality-field-type: ignored
              stVal:
                bool-field-type: mapped
                source-type: none  # {none, holding_register}
                index: 0
                mask: 0x0001  # mask the register. true if masked value != 0
                invert: false  # invert the boolean value.
              t:
                timestamp-field-type: ignored
            DynamicTest:
              q:
                quality-field-type: ignored
              stVal:
                enum-field-type: mapped
                enum-mapping-type: none  # {none, holding_register, multiple_holding_register}
                index: 0
                mask: 0xffff  # mask the register. map masked values to enum values
                mapping:
                  - name: DynamicTestKind_none
                    value: 0
                  - name: DynamicTestKind_testing
                    value: 1
                  - name: DynamicTestKind_operating
                    value: 2
                  - name: DynamicTestKind_failed
                    value: 3
              t:
                timestamp-field-type: ignored
            EmgStop:
              q:
                quality-field-type: ignored
              stVal:
                bool-field-type: mapped
                source-type: none  # {none, holding_register}
                index: 0
                mask: 0x0001  # mask the register. true if masked value != 0
                invert: false  # invert the boolean value.
              t:
                timestamp-field-type: ignored
            GnSynSt:
              q:
                quality-field-type: ignored
              stVal:
                bool-field-type: mapped
                source-type: none  # {none, holding_register}
                index: 0
                mask: 0x0001  # mask the register. true if masked value != 0
                invert: false  # invert the boolean value.
              t:
                timestamp-field-type: ignored
            PointStatus:
              blackStartEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              frequencySetPointEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              function:
                capacityFirming:
                  capacityFirmingCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  limitNegative_dp_dt:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  limitPositive_dp_dt:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                frequencyRegulation:
                  frequencyDeadBandMinus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  frequencyDeadBandPlus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  frequencyRegulationCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  frequencySetPoint:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  gridFrequencyStableBandMinus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  gridFrequencyStableBandPlus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  overFrequencyDroop:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  underFrequencyDroop:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                peakShaving:
                  baseShavingLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  peakShavingCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  peakShavingLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socManagementAllowedHighLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socManagementAllowedLowLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                socLimit:
                  socHighLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socHighLimitHysteresis:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socLimitCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  socLowLimit:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socLowLimitHysteresis:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                socManagement:
                  socDeadBandMinus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socDeadBandPlus:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socManagementCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  socPowerSetPoint:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                  socSetPoint:
                    value:
                      float-field-type: mapped
                      source-type: none  # {none, holding_register}
                      register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                      lower_index: 0
                      upper_index: 1
                      scale: 1
                voltageDroop:
                  voltageDroopCtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  voltageRegulation:
                    overVoltageDroop:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    underVoltageDroop:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageDeadBandMinus:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageDeadBandPlus:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageSetPoint:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                voltagePI:
                  voltagePICtl:
                    value:
                      bool-field-type: mapped
                      source-type: none  # {none, holding_register}
                      index: 0
                      mask: 0x0001  # mask the register. true if masked value != 0
                      invert: false  # invert the boolean value.
                  voltageRegulation:
                    overVoltageDroop:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    underVoltageDroop:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageDeadBandMinus:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageDeadBandPlus:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
                    voltageSetPoint:
                      value:
                        float-field-type: mapped
                        source-type: none  # {none, holding_register}
                        register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                        lower_index: 0
                        upper_index: 1
                        scale: 1
              mode:
                setVal:
                  enum-field-type: mapped
                  enum-mapping-type: none  # {none, holding_register, multiple_holding_register}
                  index: 0
                  mask: 0xffff  # mask the register. map masked values to enum values
                  mapping:
                    - name: GridConnectModeKind_UNDEFINED
                      value: 0
                    - name: GridConnectModeKind_CSI
                      value: 1
                    - name: GridConnectModeKind_VC_VSI
                      value: 2
                    - name: GridConnectModeKind_CC_VSI
                      value: 3
                    - name: GridConnectModeKind_none
                      value: 98
                    - name: GridConnectModeKind_other
                      value: 99
                    - name: GridConnectModeKind_VSI_PQ
                      value: 2000
                    - name: GridConnectModeKind_VSI_VF
                      value: 2001
                    - name: GridConnectModeKind_VSI_ISO
                      value: 2002
                setValExtension:
                  value:
                    string-field-type: ignored
              pctHzDroop:
                value:
                  float-field-type: mapped
                  source-type: none  # {none, holding_register}
                  register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                  lower_index: 0
                  upper_index: 1
                  scale: 1
              pctVDroop:
                value:
                  float-field-type: mapped
                  source-type: none  # {none, holding_register}
                  register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                  lower_index: 0
                  upper_index: 1
                  scale: 1
              rampRates:
                negativeReactivePowerKVArPerMin:
                  value:
                    float-field-type: mapped
                    source-type: none  # {none, holding_register}
                    register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                    lower_index: 0
                    upper_index: 1
                    scale: 1
                negativeRealPowerKWPerMin:
                  value:
                    float-field-type: mapped
                    source-type: none  # {none, holding_register}
                    register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                    lower_index: 0
                    upper_index: 1
                    scale: 1
                positiveReactivePowerKVArPerMin:
                  value:
                    float-field-type: mapped
                    source-type: none  # {none, holding_register}
                    register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                    lower_index: 0
                    upper_index: 1
                    scale: 1
                positiveRealPowerKWPerMin:
                  value:
                    float-field-type: mapped
                    source-type: none  # {none, holding_register}
                    register-mapping: sint32  # {sint16, uint16, sint32, uint32, sint32_with_modulus, uint32_with_modulus, float32}
                    lower_index: 0
                    upper_index: 1
                    scale: 1
              reactivePwrSetPointEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              realPwrSetPointEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              state:
                value:
                  enum-field-type: mapped
                  enum-mapping-type: none  # {none, holding_register, multiple_holding_register}
                  index: 0
                  mask: 0xffff  # mask the register. map masked values to enum values
                  mapping:
                    - name: StateKind_off
                      value: 0
                    - name: StateKind_on
                      value: 1
                    - name: StateKind_standby
                      value: 2
              syncBackToGrid:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              transToIslndOnGridLossEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
              voltageSetPointEnabled:
                ctlVal:
                  bool-field-type: mapped
                  source-type: none  # {none, holding_register}
                  index: 0
                  mask: 0x0001  # mask the register. true if masked value != 0
                  invert: false  # invert the boolean value.
      ied:
        identifiedObject:
          description:
            value:
              string-field-type: ignored
          mRID:
            value:
              string-field-type: ignored
          name:
            value:
              string-field-type: ignored
...

